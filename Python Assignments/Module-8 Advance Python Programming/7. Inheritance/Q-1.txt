Q - Single, Multilevel, Multiple, Hierarchical, and Hybrid inheritance in Python.

Inheritance represents parent and child relationship.
Inheritance provides reusability.


1. Single Inheritance :
    In single inheritance, A class is derived from only one parent class. This means that the child class inherits properties and methods from just one class.

    class A is Super class, Base class, Parent class.
    class B is Sub class, Derived class, Child class.

    e.g: A -> B


2. Multilevel Inheritance :
    A class is derived from another class, which is itself derived from another class. This creates a chain of inheritance.

    e.g: A -> B -> C


3. Multiple Inheritance :
    In multiple inheritance, a class can inherit from more than one class. This allows the child class to inherit methods and properties from multiple parent classes.

    e.g : class C has access to class A and class B


4. Hierarchical Inheritance :
    In hierarchical inheritance, multiple classes inherit from a single parent class. This means the parent class is shared among multiple child classes.

    e.g : class B and class C has access to class A


5. Hybrid Inheritance :
    Hybrid inheritance is a combination of more than one type of inheritance. It could be a combination of multiple, multilevel, hierarchical, etc.